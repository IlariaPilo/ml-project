import numpy as np
import matplotlib.pyplot as plt

if __name__ == '__main__':
    C = np.array([0.01, 0.1, 1, 10])
    gaussF_pcaF_K_1 = np.array([0.058389, 0.060039, 0.060306, 0.056706])
    gaussF_pcaF_K_10 = np.array([0.060073, 0.060273, 0.060239, 0.060273])
    gaussF_pca8_K_1 = np.array([0.061623, 0.058322, 0.058456, 0.058256])
    gaussF_pca8_K_10 = np.array([0.058389, 0.058423, 0.056806, 0.058423])
    gaussT_pcaF_K_1 = np.array([0.076841, 0.063173, 0.063140, 0.061489])
    gaussT_pcaF_K_10 = np.array([0.076841, 0.063173, 0.063140, 0.063140])
    gaussT_pca8_K_1 = np.array([0.180585, 0.177118, 0.177218, 0.175534])
    gaussT_pca8_K_10 = np.array([0.180585, 0.177118, 0.177218, 0.180118])

    """
    plt.figure()
    plt.suptitle("Linear SVM results, gaussianized features comparison")
    plt.subplot(2, 2, 1)
    plt.title("No PCA, K = 1")
    plt.semilogx(C, gaussT_pcaF_K_1, label='Gaussianized features')
    plt.semilogx(C, gaussF_pcaF_K_1, label='Standard features')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.subplot(2, 2, 2)
    plt.title("No PCA, K = 10")
    plt.semilogx(C, gaussT_pcaF_K_10, label='Gaussianized features')
    plt.semilogx(C, gaussF_pcaF_K_10, label='Standard features')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.subplot(2, 2, 3)
    plt.title("PCA (m = 8), K = 1")
    plt.semilogx(C, gaussT_pca8_K_1, label='Gaussianized features')
    plt.semilogx(C, gaussF_pca8_K_1, label='Standard features')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.subplot(2, 2, 4)
    plt.title("PCA (m = 8), K = 10")
    plt.semilogx(C, gaussT_pca8_K_10, label='Gaussianized features')
    plt.semilogx(C, gaussF_pca8_K_10, label='Standard features')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.show()
    """
    """
    plt.figure()
    plt.suptitle("Linear SVM results, PCA comparison")
    plt.subplot(1, 2, 1)
    plt.title("K = 1")
    plt.semilogx(C, gaussF_pcaF_K_1, label='No PCA')
    plt.semilogx(C, gaussF_pca8_K_1, label='PCA (m = 8)')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.subplot(1, 2, 2)
    plt.title("K = 10")
    plt.semilogx(C, gaussF_pcaF_K_10, label='No PCA')
    plt.semilogx(C, gaussF_pca8_K_10, label='PCA (m = 8)')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.show()
    """
    plt.figure()
    plt.suptitle("Linear SVM results, K comparison")
    plt.subplot(1, 2, 1)
    plt.title("No PCA")
    plt.semilogx(C, gaussF_pcaF_K_1, label='K = 1')
    plt.semilogx(C, gaussF_pcaF_K_10, label='K = 10')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.subplot(1, 2, 2)
    plt.title("PCA (m = 8)")
    plt.semilogx(C, gaussF_pca8_K_1, label='K = 1')
    plt.semilogx(C, gaussF_pca8_K_10, label='K = 10')
    plt.xlabel("C")
    plt.ylabel("minDCF")
    plt.legend()
    plt.show()